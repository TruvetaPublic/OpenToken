name: Python Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'lib/python/**'
      - '.github/workflows/python-test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'lib/python/**'
      - '.github/workflows/python-test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      packages: write
    strategy:
      matrix:
        python-version: [3.9, "3.10", 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f lib/python/requirements.txt ]; then
          pip install -r lib/python/requirements.txt
        fi
        pip install pytest pytest-cov flake8
        pip install -e lib/python/
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 lib/python/src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 lib/python/src --count --exit-zero --statistics
    
    - name: Test with pytest
      run: |
        PYTHONPATH=lib/python/src/main pytest lib/python/src/test

    - name: Run main.py
      run: |
        cd lib/python
        PYTHONPATH=src/main python3 src/main/opentoken/main.py -i ../../resources/sample.csv -t csv -o target/output.csv -h "HashingKey"  -e "Secret-Encryption-Key-Goes-Here."
